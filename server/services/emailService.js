const nodemailer = require('nodemailer');

// Create transporter (using Gmail SMTP)
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS
    }
  });
};

// Send order notification email
const sendOrderNotification = async (order, user) => {
  try {
    const transporter = createTransporter();

    // Format order items for email
    const itemsList = order.items.map(item => 
      `â€¢ ${item.name} (x${item.quantity}) - $${(item.price * item.quantity).toFixed(2)}`
    ).join('\n');

    // Format delivery address
    const address = `${order.deliveryAddress.street}, ${order.deliveryAddress.city}, ${order.deliveryAddress.state} ${order.deliveryAddress.zipCode}`;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: 'pottejae@gmail.com',
      subject: `New CaterVegas Order #${order.orderNumber}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #333; border-bottom: 2px solid #333; padding-bottom: 10px;">
            New Order Received - CaterVegas
          </h2>
          
          <div style="background-color: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #333; margin-top: 0;">Order Details</h3>
            <p><strong>Order Number:</strong> #${order.orderNumber}</p>
            <p><strong>Customer:</strong> ${user.username}</p>
            <p><strong>Customer Email:</strong> ${user.email}</p>
            <p><strong>Total Amount:</strong> $${order.totalAmount.toFixed(2)}</p>
            <p><strong>Status:</strong> ${order.status}</p>
          </div>

          <div style="background-color: #f0f8ff; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #333; margin-top: 0;">Delivery Information</h3>
            <p><strong>Date:</strong> ${new Date(order.deliveryDate).toLocaleDateString()}</p>
            <p><strong>Time:</strong> ${order.deliveryTime}</p>
            <p><strong>Address:</strong><br>${address}</p>
            ${order.specialInstructions ? `<p><strong>Special Instructions:</strong><br>${order.specialInstructions}</p>` : ''}
          </div>

          <div style="background-color: #fff8dc; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #333; margin-top: 0;">Order Items</h3>
            <pre style="font-family: Arial, sans-serif; white-space: pre-wrap;">${itemsList}</pre>
          </div>

          <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px;">
            <p>This email was automatically generated by the CaterVegas ordering system.</p>
            <p>Order placed at: ${new Date(order.createdAt).toLocaleString()}</p>
          </div>
        </div>
      `
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('Order notification email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };

  } catch (error) {
    console.error('Failed to send order notification email:', error);
    return { success: false, error: error.message };
  }
};

module.exports = {
  sendOrderNotification
};
